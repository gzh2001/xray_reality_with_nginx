server {
    listen 80;
    listen [::]:80; #无 IPv6，此项可删除。
    return 301 https://$host$request_uri; #HTTP 自动跳转 HTTPS，让网站看起来更真实。
}

server {
    listen 443 ssl default_server; #仅版本不小于 v1.25.1 配置，否则必须删除。
    listen [::]:443 ssl default_server; #仅版本不小于 v1.25.1 配置，否则必须删除。另无 IPv6，此项也可删除。
    http2 on; #仅版本不小于 v1.25.1 配置，否则必须删除。
    ssl_protocols TLSv1.2;
    ssl_reject_handshake on; #版本不小于 v1.19.4 才支持
} #限定域名连接（包括禁止以 IP 方式访问网站）

server {
    listen 443 quic reuseport; #仅版本不小于 v1.25.0 且 SSL 库支持 QUIC（HTTP/3） 配置，否则必须删除。
    listen [::]:443 quic reuseport; #仅版本不小于 v1.25.0 且 SSL 库支持 QUIC（HTTP/3） 配置，否则必须删除。另无 IPv6，此项也可删除。
    listen 443 ssl; #仅版本不小于 v1.25.1 配置，否则必须删除。
    listen [::]:443 ssl; #仅版本不小于 v1.25.1 配置，否则必须删除。另无 IPv6，此项也可删除。
    http2 on; #仅版本不小于 v1.25.1 配置，否则必须删除。
    server_name ${NGINX_HOST}; #修改为自己的域名

    ssl_certificate /var/www/certs/fullchain.pem; #换成自己的证书，绝对路径。
    ssl_certificate_key /var/www/certs/key.pem; #换成自己的密钥，绝对路径。

    ssl_protocols TLSv1.2 TLSv1.3; #若使用 OpenSSL 库，TLSv1.3 需要 OpenSSL 库的版本不小于 1.1.1 构建才支持。
    ssl_prefer_server_ciphers on; #优先使用服务端的密码套件。（对如下 TLSv1.2 协议的密码套件有效）
    ssl_ciphers ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-ECDSA-CHACHA20-POLY1305; #若证书为 RSA 证书，所有 ECDSA 改为 RSA。
    ssl_ecdh_curve secp521r1:secp384r1:secp256r1:x25519; #若使用 OpenSSL 库，此项配置参数需要 OpenSSL 库的版本不小于 3.0.0 构建才支持。

    location / {
        add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always; #启用 HSTS
        add_header Alt-Svc 'h3=":443"; ma=86400'; #通告 HTTP/3 server 的可用性
        root /usr/share/nginx/html; #修改为自己存放的 WEB 文件路径
        index index.html index.htm;
    }
} #若 Nginx 无法启用 HTTP/3，此部分配置可删除。